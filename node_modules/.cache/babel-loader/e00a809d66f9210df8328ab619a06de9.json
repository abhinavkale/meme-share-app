{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mypc/Projects/meme-creator/src/Meme/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nexport const Meme = () => {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => {\n      res.json().then(res => {\n        // console.log(res);\n        const memes = res.data.memes;\n        setMemes(memes);\n      });\n    });\n  }, []);\n  return memes.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(\"click!\"),\n      className: styles.skip,\n      children: \"Skip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: memes[1].url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"/\"\n  }, void 0, false);\n};\n\n_s(Meme, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/home/mypc/Projects/meme-creator/src/Meme/Meme.js"],"names":["React","useEffect","useState","styles","Meme","memes","setMemes","fetch","then","res","json","data","length","container","console","log","skip","url"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAiDC,GAAD,IAAS;AACvDA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBC,GAAD,IAAS;AACvB;AACA,cAAMJ,KAAK,GAAGI,GAAG,CAACE,IAAJ,CAASN,KAAvB;AACAC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAJD;AAKD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,SAAOA,KAAK,CAACO,MAAN,gBACL;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,SAAvB;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAvB;AAA8C,MAAA,SAAS,EAAEZ,MAAM,CAACa,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,GAAG,EAAEX,KAAK,CAAC,CAAD,CAAL,CAASY;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAQL;AAAA;AAAA,mBARF;AAUD,CAtBM;;GAAMb,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\n\nexport const Meme = () => {\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then((res) => {\n      res.json().then((res) => {\n        // console.log(res);\n        const memes = res.data.memes;\n        setMemes(memes);\n      });\n    });\n  }, []);\n\n  return memes.length ? (\n    <div className={styles.container}>\n      <button onClick={() => console.log(\"click!\")} className={styles.skip}>\n        Skip\n      </button>\n      <img src={memes[1].url} />\n    </div>\n  ) : (\n    <>/</>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}