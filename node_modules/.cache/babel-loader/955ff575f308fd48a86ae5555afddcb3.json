{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mypc/Projects/meme-creator/src/Meme/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nexport const Meme = () => {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => {\n      res.json().then(res => {\n        // console.log(res);\n        const memes = res.data.memes;\n        setMemes(memes);\n      });\n    });\n  }, []);\n  return memes ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: memes[0].url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 18\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"/\"\n  }, void 0, false);\n};\n\n_s(Meme, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/home/mypc/Projects/meme-creator/src/Meme/Meme.js"],"names":["React","useEffect","useState","Meme","memes","setMemes","fetch","then","res","json","data","url"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAiDC,GAAD,IAAS;AACvDA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBC,GAAD,IAAS;AACvB;AACA,cAAMJ,KAAK,GAAGI,GAAG,CAACE,IAAJ,CAASN,KAAvB;AACAC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAJD;AAKD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,SAAOA,KAAK,gBAAG;AAAK,IAAA,GAAG,EAAEA,KAAK,CAAC,CAAD,CAAL,CAASO;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAgC;AAAA;AAAA,mBAA5C;AACD,CAbM;;GAAMR,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport const Meme = () => {\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then((res) => {\n      res.json().then((res) => {\n        // console.log(res);\n        const memes = res.data.memes;\n        setMemes(memes);\n      });\n    });\n  }, []);\n\n  return memes ? <img src={memes[0].url} /> : <>/</>;\n};\n"]},"metadata":{},"sourceType":"module"}