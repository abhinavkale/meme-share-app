{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mypc/Projects/meme-creator/src/Meme/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nexport const Meme = () => {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n  const [memeIndex, SetMemeIndex] = useState(0);\n\n  const shuffleMemes = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => {\n      res.json().then(res => {\n        // console.log(res);\n        const _memes = res.data.memes;\n        shuffleMemes(_memes);\n        setMemes(_memes);\n      });\n    });\n  }, []);\n  return memes.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => SetMemeIndex(memeIndex + 1),\n      className: styles.skip,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => SetMemeIndex(memeIndex + 1),\n      className: styles.skip,\n      children: \"Skip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: memes[memeIndex].url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"/\"\n  }, void 0, false);\n};\n\n_s(Meme, \"iwpxSRgoNc9MHOT/EzwCwxJ8tsM=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/home/mypc/Projects/meme-creator/src/Meme/Meme.js"],"names":["React","useEffect","useState","styles","Meme","memes","setMemes","memeIndex","SetMemeIndex","shuffleMemes","array","i","length","j","Math","floor","random","temp","fetch","then","res","json","_memes","data","container","skip","url"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAA3B,CAAV;AACA,YAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACAD,MAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,MAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACD;AACF,GAPD;;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAiDC,GAAD,IAAS;AACvDA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBC,GAAD,IAAS;AACvB;AACA,cAAME,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASlB,KAAxB;AACAI,QAAAA,YAAY,CAACa,MAAD,CAAZ;AACAhB,QAAAA,QAAQ,CAACgB,MAAD,CAAR;AACD,OALD;AAMD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAWA,SAAOjB,KAAK,CAACO,MAAN,gBACL;AAAK,IAAA,SAAS,EAAET,MAAM,CAACqB,SAAvB;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,MAAMhB,YAAY,CAACD,SAAS,GAAG,CAAb,CAD7B;AAEE,MAAA,SAAS,EAAEJ,MAAM,CAACsB,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,OAAO,EAAE,MAAMjB,YAAY,CAACD,SAAS,GAAG,CAAb,CAD7B;AAEE,MAAA,SAAS,EAAEJ,MAAM,CAACsB,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AAAK,MAAA,GAAG,EAAEpB,KAAK,CAACE,SAAD,CAAL,CAAiBmB;AAA3B;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAiBL;AAAA;AAAA,mBAjBF;AAmBD,CA3CM;;GAAMtB,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\n\nexport const Meme = () => {\n  const [memes, setMemes] = useState([]);\n  const [memeIndex, SetMemeIndex] = useState(0);\n\n  const shuffleMemes = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then((res) => {\n      res.json().then((res) => {\n        // console.log(res);\n        const _memes = res.data.memes;\n        shuffleMemes(_memes);\n        setMemes(_memes);\n      });\n    });\n  }, []);\n\n  return memes.length ? (\n    <div className={styles.container}>\n      <button\n        onClick={() => SetMemeIndex(memeIndex + 1)}\n        className={styles.skip}\n      >\n        Generate\n      </button>\n      <button\n        onClick={() => SetMemeIndex(memeIndex + 1)}\n        className={styles.skip}\n      >\n        Skip\n      </button>\n      <img src={memes[memeIndex].url} />\n    </div>\n  ) : (\n    <>/</>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}