{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mypc/Projects/meme-creator/src/MemeGenerated/MemeGenerated.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from \"./styles.module.css\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useClipboard } from 'use-clipboard-copy';\nexport const MemeGenerated = () => {\n  _s();\n\n  const [copied, setCopied] = useState(false);\n  const clipboard = useClipboard();\n  const history = useHistory();\n  const location = useLocation();\n  const url = new URLSearchParams(location.search).get('url');\n\n  const copyLink = () => {\n    clipboard.copy(url);\n    setCopied(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: copyLink,\n      className: styles.copy,\n      children: \"Share Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push('/'),\n      className: styles.home,\n      children: \"Make More Memes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), url && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemeGenerated, \"CC7YJQ5hd9WexOD7XakkJPc1ZR4=\", false, function () {\n  return [useClipboard, useHistory, useLocation];\n});\n\n_c = MemeGenerated;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemeGenerated\");","map":{"version":3,"sources":["/home/mypc/Projects/meme-creator/src/MemeGenerated/MemeGenerated.js"],"names":["React","useState","styles","useHistory","useLocation","useClipboard","MemeGenerated","copied","setCopied","clipboard","history","location","url","URLSearchParams","search","get","copyLink","copy","container","push","home"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMQ,SAAS,GAAGJ,YAAY,EAA9B;AACA,QAAMK,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,GAAG,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,EAAqCC,GAArC,CAAyC,KAAzC,CAAZ;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACnBP,IAAAA,SAAS,CAACQ,IAAV,CAAeL,GAAf;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACgB,SAAvB;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEF,QAAjB;AAA2B,MAAA,SAAS,EAAEd,MAAM,CAACe,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMP,OAAO,CAACS,IAAR,CAAa,GAAb,CAAvB;AAA0C,MAAA,SAAS,EAAEjB,MAAM,CAACkB,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAOMR,GAAG,iBAAI;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAe,MAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzBM;;GAAMN,a;UAISD,Y,EACFF,U,EACCC,W;;;KANRE,a","sourcesContent":["import React, { useState } from 'react';\nimport styles from \"./styles.module.css\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useClipboard } from 'use-clipboard-copy';\n\nexport const MemeGenerated = () => {\n\n    const [copied, setCopied] = useState(false);\n\n    const clipboard = useClipboard();\n    const history = useHistory();\n    const location = useLocation();\n    const url = new URLSearchParams(location.search).get('url');\n\n    const copyLink = () => {\n        clipboard.copy(url);\n        setCopied(true);\n    }\n\n    return (\n        <div className={styles.container}>\n            <button onClick={copyLink} className={styles.copy}>\n                Share Meme\n            </button>\n            <button onClick={() => history.push('/')} className={styles.home}>\n                Make More Memes\n            </button>\n            { url && <img src={url} alt=\"\"/>}\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}